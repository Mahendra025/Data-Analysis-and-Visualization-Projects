SHOW WAREHOUSES;
CREATE DATABASE DEMO_DATABASE;
USE DATABASE DEMO_DATABASE;

CREATE TABLE Customer(
Customer_Index INT NOT NULL PRIMARY KEY,
Customer_Names VARCHAR(20)
);

CREATE TABLE Products(
Index INT PRIMARY KEY,
Product_Name VARCHAR(20)
);

CREATE TABLE Regions(
Index INT PRIMARY KEY,
City VARCHAR(25),
Country VARCHAR(25)
);

CREATE OR REPLACE TABLE Orders(
Order_Number VARCHAR(15),
Order_Date DATE,
Customer_Name_Index INT PRIMARY KEY,
Channel VARCHAR(15),
Warehouse_Code VARCHAR(15),
Delivery_Region_Index INT,
Product_Index INT FOREIGN KEY REFERENCES Products(Index),
Order_Quantity INT,
Unit_Price DECIMAL(5,1),
Total_Revenue_USD DECIMAL(7,2),
Total_Unit_Cost_USD DECIMAL(7,2)
);

SELECT * FROM Customer;
SELECT * FROM Products;
SELECT * FROM Regions;
SELECT * FROM Orders;

CREATE OR REPLACE TABLE SALES_DATA AS(
SELECT O.*,C.Customer_Index,C.Customer_Names,P.Product_Name,R.City,R.Country FROM Orders O
LEFT JOIN Customer C ON O.Customer_Name_Index=C.Customer_Index
LEFT JOIN Products P ON O.Product_Index=P.Index
LEFT JOIN Regions R ON O.Delivery_Region_Index=R.Index
);
SELECT* FROM SALES_DATA;

SELECT QUARTERS FROM (SELECT ORDER_DATE,
    CASE
      WHEN MONTH(ORDER_DATE) >= 1 AND MONTH(ORDER_DATE) <= 3 THEN 'Q1'
      WHEN MONTH(ORDER_DATE) >= 4 AND MONTH(ORDER_DATE) <= 6 THEN 'Q2'
      WHEN MONTH(ORDER_DATE) >= 7 AND MONTH(ORDER_DATE) <= 9 THEN 'Q3'
      WHEN MONTH(ORDER_DATE) >= 10 AND MONTH(ORDER_DATE) <= 12 THEN 'Q4'
      END AS QUARTERS
      FROM SALES_DATA);
      
SELECT* FROM SALES_DATA;
      
SELECT DISTINCT(CUSTOMER_NAMES),SUM(TOTAL_REVENUE_USD) 
FROM SALES_DATA
GROUP BY 1
ORDER BY 2 DESC
LIMIT 5;
---TOP 5 CUSTOMER
---Medline 	4,081,485.9
---Pure Group	3,821,592.9
---OUR Ltd	3,676,035.4
---Eminence Corp	3,643,426.5
---Apotheca Ltd	3,608,492.7)

SELECT PRODUCT_NAME,
MIN(UNIT_PRICE)AS CHEAPEST_PRODUCT
FROM SALES_DATA
GROUP BY 1
LIMIT 1;
---PRODUCT_NAME	 CHEAPEST_PRODUCT
---Product 11   	15

SELECT PRODUCT_NAME,
MAX(UNIT_PRICE)AS EXPENSIVE_PRODUCT
FROM SALES_DATA
GROUP BY 1
LIMIT 1;
---PRODUCT_NAME 	EXPENSIVE_PRODUCT
---Product 11    	6,532.5


SELECT DISTINCT(CHANNEL),SUM(TOTAL_REVENUE_USD)FROM SALES_DATA
GROUP BY 1
ORDER BY 2 DESC;
---REVENUE GENERATED FROM EACH CATEGORY
---Wholesale	83,023,974.6
---Distributor	49,041,904.2
---Export	22,680,612.2


SELECT COUNTRY,COUNT(ORDER_NUMBER)AS Numbers_of_Orders_by_Country,
SUM(TOTAL_REVENUE_USD)AS TOTAL_REVENUE_BY_COUNTRY
FROM SALES_DATA
GROUP BY 1
ORDER BY 2 DESC,3DESC
LIMIT 5;
---TOP 5 COUNTRIES WITH HIGHEST NUMBER OF ORDERS AND REVENUE
---COUNTRY	NUMBERS_OF_ORDERS_BY_COUNTRY	TOTAL_REVENUE_BY_COUNTRY
---Germany	   1,498                    	29,505,567.2
---Ukraine	   1,088                    	21,015,199.9
---Italy	     803                    	15,405,490.9
---Spain	     734	                    14,186,995.4
---UK        	 594                        11,372,219.5


SELECT COUNTRY,COUNT(ORDER_NUMBER)AS Numbers_of_Orders_by_Country,
SUM(TOTAL_REVENUE_USD)AS TOTAL_REVENUE_BY_COUNTRY
FROM SALES_DATA
GROUP BY 1
ORDER BY 2,3
LIMIT 5;
---LEAST 5 COUNTRIES WITH LOWEST NUMBER OF ORDERS AND REVENUE
---COUNTRY	NUMBERS_OF_ORDERS_BY_COUNTRY	TOTAL_REVENUE_BY_COUNTRY
---Belarus	    99	                        1,876,053.6
---Portugal	    106	                        2,065,174.5
---Romania	    108	                        1,996,372.2
---Sweden	    111	                        2,287,071.8
---Moldova	    112	                        2,350,829


SELECT PRODUCT_NAME,SUM(TOTAL_REVENUE_USD-TOTAL_UNIT_COST_USD) AS PROFIT
FROM SALES_DATA
GROUP BY 1
ORDER BY 2 DESC;
---Revenue Generated from each Products
---PRODUCT_NAME	   Profit
---Product 7	23,782,523.23
---Product 1	23,672,012.64
---Product 2	21,248,995.63
---Product 11	19,082,753.58
---Product 5	15,786,754.38
---Product 13	10,879,810.47
---Product 9	8,604,360.14
---Product 6	3,082,147.29
---Product 8	2,976,622.71
---Product 14	2,924,243.87
---Product 10	2,891,926.33
---Product 12	2,878,569.36
---Product 3	2,838,255.16
---Product 4	2,644,215.96

SELECT YEAR(ORDER_DATE),SUM(TOTAL_REVENUE_USD)AS TOTAL_REVENUE_USD
FROM SALES_DATA
GROUP BY YEAR(ORDER_DATE)
ORDER BY 2 DESC;
--YEARLY WISE REVENUE
---YEAR(ORDER_DATE) 	TOTAL_REVENUE_USD
---2013	                39,274,094.8
---2016	                38,514,460.9
---2015	                38,388,387
---2014	                38,368,769.4
---2017	                200,778.9


